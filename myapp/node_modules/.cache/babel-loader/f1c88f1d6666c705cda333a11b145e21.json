{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/HuyLo/Desktop/ReactJS-T3H/myapp/src/redux/Counter.js\";\nimport React, { Component } from 'react';\nimport { createStore } from \"redux\";\nimport { connect, Provider } from 'react-redux';\nvar initialState = {\n  counter: 0,\n  step: 1\n};\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case \"INCREASE_COUNTER\":\n      return { ...state,\n        counter: state.counter + action.payload.step\n      };\n\n    case \"INCREASE_ASYNC_COUNTER\":\n      return { ...state,\n        counter: state.counter + action.payload.step\n      };\n\n    case \"INCREASE_COUNTER_FOOTER\":\n      return { ...state,\n        counter: state.counter + action.payload.step\n      };\n\n    default:\n      break;\n  }\n\n  return state;\n}\n\nfunction increaseAction(step) {\n  store.dispatch({\n    type: \"INCREASE_COUNTER\",\n    payload: {\n      step\n    }\n  });\n}\n\nfunction increaseAsyncAction(step) {\n  setTimeout(() => {\n    store.dispatch({\n      type: \"INCREASE_ASYNC_COUNTER\",\n      payload: {\n        step\n      }\n    });\n  }, 1000);\n}\n\nvar store = createStore(reducer);\nexport default class Container extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Provider, {\n      store: store,\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Counter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FooterConnect, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Header extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      counter: 0\n    };\n  }\n\n  componentDidMount() {\n    store.subscribe(() => {\n      const {\n        counter\n      } = store.getState();\n      this.setState({\n        counter\n      });\n    });\n  }\n\n  render() {\n    const {\n      counter\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [\" Counter : \", counter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      counter: 0,\n      step: 1\n    };\n\n    this.increase = () => {\n      increaseAction(this.state.step);\n    };\n\n    this.increaseAsync = () => {\n      increaseAsyncAction(this.state.step);\n    };\n  }\n\n  componentDidMount() {\n    store.subscribe(() => {\n      const {\n        counter\n      } = store.getState();\n      this.setState({\n        counter\n      });\n    });\n  }\n\n  render() {\n    const {\n      counter\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" Counter : \", counter, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.increase,\n        children: \"Increase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.increaseAsync,\n        children: \"IncreaseAsync\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Footer extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Counter : \", this.props.counter, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.props.iscreaseFooter,\n        children: \"Increase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    counter: state.counter\n  };\n}; // const mapDispatchToProps = (dispatch, ownProps) => {\n//     return {\n//         iscreaseFooter: () => {\n//             dispatch({type: \"INCREASE_COUNTER_FOOTER\"})\n//         }\n//     }\n// }\n\n\nconst FooterConnect = connect(mapStateToProps, mapDispatchToProps)(Footer);","map":{"version":3,"sources":["/Users/HuyLo/Desktop/ReactJS-T3H/myapp/src/redux/Counter.js"],"names":["React","Component","createStore","connect","Provider","initialState","counter","step","reducer","state","action","type","payload","increaseAction","store","dispatch","increaseAsyncAction","setTimeout","Container","render","Header","componentDidMount","subscribe","getState","setState","Counter","increase","increaseAsync","Footer","props","iscreaseFooter","mapStateToProps","FooterConnect","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {createStore} from \"redux\";\nimport {connect, Provider} from 'react-redux'\n\nvar initialState = {\n    counter: 0,\n    step: 1,\n}\n\nfunction reducer(state = initialState, action) {\n\n    switch (action.type) {\n        case \"INCREASE_COUNTER\":\n            return {\n                ...state,\n                counter: state.counter + action.payload.step\n            }\n        case \"INCREASE_ASYNC_COUNTER\":\n            return {\n                ...state,\n                counter: state.counter + action.payload.step\n            }\n        case \"INCREASE_COUNTER_FOOTER\":\n            return {\n                ...state,\n                counter: state.counter + action.payload.step\n            }\n        default:\n            break\n    }\n    return state\n}\n\n\nfunction increaseAction(step) {\n    store.dispatch({\n        type: \"INCREASE_COUNTER\",\n        payload: {\n            step\n        }\n    })\n\n}\n\nfunction increaseAsyncAction(step) {\n    setTimeout(() => {\n        store.dispatch({\n            type: \"INCREASE_ASYNC_COUNTER\",\n            payload: {\n                step\n            }\n        })\n    }, 1000)\n\n}\n\nvar store = createStore(reducer)\n\n\nexport default class Container extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <Header/>\n                <hr/>\n                <Counter/>\n                <hr/>\n                <FooterConnect/>\n            </Provider>\n        );\n    }\n}\n\nclass Header extends Component {\n    state = {\n        counter: 0\n    }\n\n    componentDidMount() {\n        store.subscribe(() => {\n            const {counter} = store.getState();\n            this.setState({counter})\n        })\n    }\n\n    render() {\n        const {counter} = this.state\n        return (\n            <header> Counter : {counter}</header>\n        );\n    }\n}\n\n\nclass Counter extends Component {\n    state = {\n        counter: 0,\n        step: 1\n    }\n\n    componentDidMount() {\n        store.subscribe(() => {\n            const {counter} = store.getState();\n            this.setState({counter})\n        })\n    }\n\n    increase = () => {\n        increaseAction(this.state.step)\n    }\n    increaseAsync = () => {\n        increaseAsyncAction(this.state.step)\n    }\n\n    render() {\n        const {counter} = this.state\n        return (\n            <div> Counter : {counter}\n                <button onClick={this.increase}>Increase</button>\n                <button onClick={this.increaseAsync}>IncreaseAsync</button>\n            </div>\n        );\n    }\n}\n\nclass Footer extends Component {\n\n    render() {\n        return (\n            <div>\n                Counter : {this.props.counter}\n                <button onClick={this.props.iscreaseFooter}>Increase</button>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        counter: state.counter\n    }\n}\n// const mapDispatchToProps = (dispatch, ownProps) => {\n//     return {\n//         iscreaseFooter: () => {\n//             dispatch({type: \"INCREASE_COUNTER_FOOTER\"})\n//         }\n//     }\n// }\nconst FooterConnect = connect(mapStateToProps, mapDispatchToProps)(Footer)\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}