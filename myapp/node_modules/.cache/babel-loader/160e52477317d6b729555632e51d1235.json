{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/HuyLo/Desktop/ReactJS-T3H/myapp/src/redux/Counter.js\";\nimport React, { Component } from 'react';\nimport { createStore } from \"redux\";\nvar initialState = {\n  counter: 0\n};\n\nfunction reducer(state = initialState, action) {\n  console.log(\"state: \", state, action);\n\n  if (action.type === \"InCREASE_COUNTER\") {\n    return { ...state,\n      counter: state.counter + action.payload.step\n    };\n  } // switch (action.type) {\n  //     case \"\":\n  //         return {}\n  //     default:\n  //         break\n  // }\n\n\n  return state;\n}\n\nfunction increaseAction(step) {\n  store.dispatch({\n    type: \"InCREASE_COUNTER\",\n    payload: {\n      step\n    }\n  });\n}\n\nvar store = createStore(reducer);\nexport default class Container extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Counter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Header extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      counter: 0\n    };\n  }\n\n  componentDidMount() {\n    store.subscribe(() => {\n      const {\n        counter\n      } = store.getState();\n      this.setState({\n        counter\n      });\n    });\n  }\n\n  render() {\n    const {\n      counter\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [\" Counter : \", counter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      counter: 0,\n      step: 1\n    };\n\n    this.increase = () => {\n      increaseAction(this.state.step);\n      console.log(\"state store\", store.getState());\n      const {\n        counter\n      } = store.getState();\n      this.setState({\n        counter\n      });\n    };\n\n    this.increaseAsync = () => {\n      increaseAsyncAction(this.state.step);\n    };\n  }\n\n  render() {\n    const {\n      counter\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" Counter : \", counter, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.increase,\n        children: \"Increase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.increaseAsync,\n        children: \"IncreaseAsync\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/HuyLo/Desktop/ReactJS-T3H/myapp/src/redux/Counter.js"],"names":["React","Component","createStore","initialState","counter","reducer","state","action","console","log","type","payload","step","increaseAction","store","dispatch","Container","render","Header","componentDidMount","subscribe","getState","setState","Counter","increase","increaseAsync","increaseAsyncAction"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {createStore} from \"redux\";\n\nvar initialState = {\n    counter : 0,\n}\n\nfunction reducer(state = initialState, action) {\n\n    console.log(\"state: \", state, action)\n    if(action.type === \"InCREASE_COUNTER\"){\n        return {\n            ...state,\n            counter: state.counter + action.payload.step\n        }\n    }\n\n\n    // switch (action.type) {\n    //     case \"\":\n    //         return {}\n    //     default:\n    //         break\n    // }\n    return state\n}\nfunction increaseAction(step) {\n    store.dispatch({\n        type : \"InCREASE_COUNTER\",\n        payload: {\n            step\n        }\n    })\n\n}\nvar store = createStore(reducer)\n\n\nexport default class Container extends Component {\n    render() {\n        return (\n            <div>\n                <Header/>\n                <hr/>\n                <Counter />\n            </div>\n        );\n    }\n}\n\n\nclass Header extends Component {\n    state ={\n        counter : 0\n    }\n\n    componentDidMount() {\n        store.subscribe(() => {\n            const {counter} = store.getState();\n            this.setState({counter})\n        })\n    }\n\n    render() {\n        const {counter }= this.state\n        return (\n            <header> Counter : {counter}</header>\n        );\n    }\n}\n\n\nclass Counter extends Component {\n    state = {\n        counter: 0,\n        step :1\n    }\n    increase = () => {\n        increaseAction(this.state.step)\n        console.log(\"state store\", store.getState())\n        const { counter } = store.getState()\n        this.setState({counter})\n\n    }\n    increaseAsync = () => {\n        increaseAsyncAction(this.state.step)\n\n    }\n\n    render() {\n        const {counter} = this.state\n        return (\n            <div> Counter : {counter}\n                <button onClick={this.increase}>Increase</button>\n                <button onClick={this.increaseAsync}>IncreaseAsync</button>\n            </div>\n        );\n    }\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}